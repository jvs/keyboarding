_layout = '''
    `1234567890-=
    qwertyuiop[]\\
    asdfghjkl;'
    zxcvbnm,./
'''

_notes = """
    A 6.87499999999998
    A# 7.28380877372013
    B 7.71692658212692
    C 8.17579891564368
    C# 8.66195721802723
    D 9.17702399741896
    D# 9.722718241315
    E 10.3008611535272
    F 10.9133822322813
    F# 11.5623257097385
    G 12.2498573744296
    G# 12.9782717993733
    A 13.75
    A# 14.5676175474403
    B 15.4338531642538
    C 16.3515978312874
    C# 17.3239144360545
    D 18.3540479948379
    D# 19.44543648263
    E 20.6017223070543
    F 21.8267644645627
    F# 23.1246514194771
    G 24.4997147488593
    G# 25.9565435987465
    A 27.4999999999999
    A# 29.1352350948806
    B 30.8677063285077
    C 32.7031956625748
    C# 34.6478288721089
    D 36.7080959896759
    D# 38.89087296526
    E 41.2034446141087
    F 43.6535289291254
    F# 46.2493028389542
    G 48.9994294977186
    G# 51.9130871974931
    A 54.9999999999999
    A# 58.2704701897612
    B 61.7354126570154
    C 65.4063913251496
    C# 69.2956577442179
    D 73.4161919793518
    D# 77.7817459305201
    E 82.4068892282174
    F 87.3070578582509
    F# 92.4986056779085
    G 97.9988589954372
    G# 103.826174394986
    A 110
    A# 116.540940379522
    B 123.470825314031
    C 130.812782650299
    C# 138.591315488436
    D 146.832383958704
    D# 155.56349186104
    E 164.813778456435
    F 174.614115716502
    F# 184.997211355817
    G 195.997717990875
    G# 207.652348789972
    A 220
    A# 233.081880759045
    B 246.941650628062
    C 261.625565300598
    C# 277.182630976872
    D 293.664767917407
    D# 311.126983722081
    E 329.62755691287
    F 349.228231433004
    F# 369.994422711634
    G 391.995435981749
    G# 415.304697579945
    A 440
    A# 466.16376151809
    B 493.883301256124
    C 523.251130601197
    C# 554.365261953744
    D 587.329535834815
    D# 622.253967444162
    E 659.25511382574
    F 698.456462866008
    F# 739.988845423269
    G 783.990871963499
    G# 830.609395159891
    A 880
    A# 932.32752303618
    B 987.766602512249
    C 1046.5022612024
    C# 1108.73052390749
    D 1174.65907166963
    D# 1244.50793488832
    E 1318.51022765148
    F 1396.91292573202
    F# 1479.97769084654
    G 1567.981743927
    G# 1661.21879031978
    A 1760
    A# 1864.65504607236
    B 1975.5332050245
    C 2093.00452240479
    C# 2217.46104781498
    D 2349.31814333926
    D# 2489.01586977665
    E 2637.02045530296
    F 2793.82585146403
    F# 2959.95538169308
    G 3135.963487854
    G# 3322.43758063957
    A 3520.00000000001
    A# 3729.31009214472
    B 3951.066410049
    C 4186.00904480959
    C# 4434.92209562996
    D 4698.63628667853
    D# 4978.0317395533
    E 5274.04091060593
    F 5587.65170292807
    F# 5919.91076338616
    G 6271.926975708
    G# 6644.87516127914
    A 7040.00000000001
    A# 7458.62018428945
    B 7902.132820098
    C 8372.01808961918
    C# 8869.84419125993
    D 9397.27257335706
    D# 9956.06347910661
    E 10548.0818212119
    F 11175.3034058562
    F# 11839.8215267723
    G 12543.853951416
    G# 13289.7503225583
    A 14080
    A# 14917.2403685789
    B 15804.265640196
    C 16744.0361792384
    C# 17739.6883825199
    D 18794.5451467141
    D# 19912.1269582132
    E 21096.1636424237
    F 22350.6068117123
    F# 23679.6430535447
    G 25087.707902832
    G# 26579.5006451166
    A 28160.0000000001
"""


class Accordion:
    def __init__(self, audio_channel: 'AudioChannel'):
        self._audio_channel = audio_channel
        self._layout = _build_layout()
        self._current_key = None

    def on_key_down(self, key: str):
        if self._current_key == key:
            return
        if key in self._layout:
            self._current_key = key
            self._audio_channel.start(self._layout[key])

    def on_key_up(self, key: str):
        if self._current_key == key:
            self._audio_channel.stop()
            self._current_key = None


def _build_layout(min_frequency=30, steps=2):
    result = {}

    # Create a list of frequencies.
    notes = []
    for line in _notes.split('\n'):
        line = line.strip()
        if line:
            freq = line.split(' ', 1)[1]
            notes.append(float(freq.strip()))

    # Skip the frequencies below our minimum.
    index = 0
    while notes[index][1] <= min_frequency:
        index += 1

    # Map the characters in the layout to the frequencies in our list.
    for c in _layout:
        if c != ' ' and c != '\n':
            result[c] = notes[index][1]
            index += steps

    return result
